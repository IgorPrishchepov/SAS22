# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

env:
  PROJECT_ID: sas22iproff
  SERVICE: sas22iproff-restapi          #google run service name STAGE
  SERVICEPROD: sas22iproff-restapi-prod
  REGION: us-central1 

on:
 
  pull_request:
    branches: [ "master" ]
  
jobs:
  sonarqube:
    name: Build and analyze
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"IgorPrishchepov_SAS22" /o:"igorprishchepov" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet restore
          dotnet build --no-restore
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"  
  
  build:
    needs: sonarqube
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: microsoft/variable-substitution@v1 
      with:
        files: '/home/runner/work/SAS22/SAS22/SAS22/ReportPortal.config.json'
      env:
         server.authentication.uuid: ${{ secrets.RP_UUID }}   
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: |- 
        pwd
        dotnet restore      
    - name: Build
      run: dotnet build --no-restore
    - name: Run linters
      uses: wearerequired/lint-action@v2
      with:
        dotnet_format: true
        continue_on_error: true
    - name: Unit Test
      run: dotnet test --no-build --verbosity normal --filter 'Category=UnitTest'
      
  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
     - uses: actions/checkout@v3
     - uses: microsoft/variable-substitution@v1 
       with:
        files: '/home/runner/work/SAS22/SAS22/SAS22/appsettings.json'
       env:
         ConnectionStrings.CloudConnection: ${{ secrets.CONNECTION_STRING }} 
     - name: Setup Cloud cli
       uses: google-github-actions/setup-gcloud@v0
       with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_email: sas22iproff@sas22iproff.iam.gserviceaccount.com
        service_account_key: ${{ secrets.GCP_SA_KEY }}       
    
     - name: Authorize Docker push
       run: gcloud auth configure-docker
      
     - name: Build and Push Container
      
       run: |-
        cd SAS22
        pwd
        ls
        docker build . -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}
        docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}
        
     - name: Deploy to Cloud Run      
       run: gcloud run deploy ${{ env.PROJECT_ID }} --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }} --region ${{ env.REGION }} --platform managed

  apitests:
    needs: deploy
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - uses: microsoft/variable-substitution@v1 
      with:
        files: '/home/runner/work/SAS22/SAS22/SAS22/ReportPortal.config.json'
      env:
         server.authentication.uuid: ${{ secrets.RP_UUID }}
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Api Test
      run: dotnet test --no-build --verbosity normal --filter 'Category=ApiTest'
  
  deployprod:
    needs: apitests
    runs-on: ubuntu-latest
    
    steps:
     - uses: actions/checkout@v3
     - uses: microsoft/variable-substitution@v1 
       with:
        files: '/home/runner/work/SAS22/SAS22/SAS22/appsettings.json'
       env:
         ConnectionStrings.CloudConnection: ${{ secrets.CONNECTION_STRING }} 
     - name: Setup Cloud cli
       uses: google-github-actions/setup-gcloud@v0
       with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_email: sas22iproff@sas22iproff.iam.gserviceaccount.com
        service_account_key: ${{ secrets.GCP_SA_KEY }}       
    
     - name: Authorize Docker push
       run: gcloud auth configure-docker
      
     - name: Build and Push Container
      
       run: |-
        cd SAS22
        pwd
        ls
        docker build . -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICEPROD }}
        docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICEPROD }}
        
     - name: Deploy to Cloud Run      
       run: gcloud run deploy ${{ env.PROJECT_ID }} --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICEPROD }} --region ${{ env.REGION }} --platform managed   